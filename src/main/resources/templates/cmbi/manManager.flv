package ${rootPackage}.service.impl;

import com.github.pagehelper.PageInfo;
import com.github.pagehelper.PageHelper;
import ${rootPackage}.${bean}.${tableBigCamel};
import ${rootPackage}.${dao}.${tableBigCamel}Mapper;
import ${rootPackage}.service.${tableBigCamel}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 *
 * @author whaosoft
 *
 */
@Service
public class ${tableBigCamel}ServiceImpl implements ${tableBigCamel}Service {

    @Autowired
    private ${tableBigCamel}Mapper ${tableSmallCamel}Mapper;

    @Override
    public void  add${tableBigCamel}(${tableBigCamel} ${tableSmallCamel}) {
        ${tableSmallCamel}Mapper.add${tableBigCamel}(${tableSmallCamel});
    }

    @Override
    public void  update${tableBigCamel}ById(${tableBigCamel} ${tableSmallCamel}) {
        ${tableSmallCamel}Mapper.update${tableBigCamel}ById(${tableSmallCamel});
    }

    @Override
    public List<${tableBigCamel}> select${tableBigCamel}List(Map<String, Object> param) {
        return ${tableSmallCamel}Mapper.select${tableBigCamel}List(param);
    }

    @Override
    public PageInfo<${tableBigCamel}> get${tableBigCamel}PageTurn(Map<String, Object> param, int pageNo, int pageSize) {
        PageHelper.startPage(pageNo, pageSize, true);
        List<${tableBigCamel}> ${tableSmallCamel}List = ${tableSmallCamel}Mapper.select${tableBigCamel}List(param);
        PageInfo<${tableBigCamel}> pageInfo = new PageInfo<${tableBigCamel}>(${tableSmallCamel}List);
        return pageInfo;
    }

    @Override
    public ${tableBigCamel} get${tableBigCamel}ById(${tabPrikeyType} ${tabPrikeySmallCamel}) {
        ${tableBigCamel} ${tableSmallCamel}info = new ${tableBigCamel}();
        Map<String, Object> rs = new HashMap<String, Object>();
        rs.put("${tabPrikeySmallCamel}", ${tabPrikeySmallCamel});
        List<${tableBigCamel}> ${tableSmallCamel}List = ${tableSmallCamel}Mapper.select${tableBigCamel}List(rs);
        if ((null != ${tableSmallCamel}List) && (${tableSmallCamel}List.size() > 0)) {
            ${tableSmallCamel}info = ${tableSmallCamel}List.get(0);
        }
        return ${tableSmallCamel}info;
    }

    @Override
    public void del${tableBigCamel}ById(${tabPrikeyType} ${tabPrikeySmallCamel}) {

     //${tableBigCamel} ${tableSmallCamel} = new ${tableBigCamel}();
     //${tableSmallCamel}.setIsDeleted(1);
     //${tableSmallCamel}.set${tabPrikeyBigCamel}(${tabPrikeySmallCamel});
     //${tableSmallCamel}Mapper.update${tableBigCamel}ById(${tableSmallCamel});

        ${tableSmallCamel}Mapper.del${tableBigCamel}ById(${tabPrikeySmallCamel});

    }

}
