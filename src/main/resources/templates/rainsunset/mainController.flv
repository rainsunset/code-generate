package ${rootPackage}.controller;

import com.rainsunset.common.bean.ResponseResult;
import ${rootPackage}.service.api.${tableBigCamel}Service;
import ${rootPackage}.service.request.${tableBigCamel}BatchDelReqDTO;
import ${rootPackage}.service.request.${tableBigCamel}DetailReqDTO;
import ${rootPackage}.service.request.${tableBigCamel}ListReqDTO;
import ${rootPackage}.service.request.${tableBigCamel}ReqDTO;
import ${rootPackage}.service.response.${tableBigCamel}ResDTO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.util.StringUtils;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


 /**
  * @Description: ${tableComment} API
  * @Author: ${codeAuthor}
  * @Company ${codeCompany}
  * @CreateDate: ${now}
  * @Version : ${codeVersion}
  */
@Api(tags = "${tableComment}接口")
@RestController
@RequestMapping("/${moduleName}/${tableSmallCamel}")
public class ${tableBigCamel}Controller{

    @Autowired
    private ${tableBigCamel}Service ${tableSmallCamel}Service;

    /**
     * 依据条件查找 ${tableComment} 列表
     *
     * @param ${tableSmallCamel}ListReqDTO
     * @return
     */
    @ApiOperation("依据条件查找 ${tableComment} 列表")
    @RequestMapping(value = "/findList", method = RequestMethod.POST)
    public ResponseResult<List<${tableBigCamel}ResDTO>> findList(@RequestBody ${tableBigCamel}ListReqDTO ${tableSmallCamel}ListReqDTO) {
        ResponseResult<List<${tableBigCamel}ResDTO>> response = ${tableSmallCamel}Service.select${tableBigCamel}List(${tableSmallCamel}ListReqDTO);
        return response;
    }

    <#if (tabPrikeySmallCamel??) && (tabPrikeySmallCamel != "")>
    /**
     * 依据Id查询 ${tableComment} 详情
     *
     * @param ${tableSmallCamel}DetailReqDTO
     * @return
     */
    @ApiOperation("依据Id查询 ${tableComment} 详情")
    @RequestMapping(value = "/getDetail", method = RequestMethod.POST)
    public ResponseResult<${tableBigCamel}ResDTO> get${tableBigCamel}Detail(@RequestBody ${tableBigCamel}DetailReqDTO ${tableSmallCamel}DetailReqDTO) {
        ResponseResult<${tableBigCamel}ResDTO> response = ${tableSmallCamel}Service.get${tableBigCamel}Detail(${tableSmallCamel}DetailReqDTO);
        return response;
    }

    /**
     * 新增或更新 ${tableComment}
     *
     * @param ${tableSmallCamel}ReqDTO
     * @return
     */
    @ApiOperation("新增或更新 ${tableComment}")
    @RequestMapping(value = "/addOrUpdate", method = RequestMethod.POST)
    public ResponseResult<Integer> addOrUpdate(@RequestBody ${tableBigCamel}ReqDTO ${tableSmallCamel}ReqDTO) {
        ResponseResult<Integer> response = ${tableSmallCamel}Service.addOrUpdate${tableBigCamel}(${tableSmallCamel}ReqDTO);
        return response;
    }

    /**
     * 依据Id批量删除 ${tableComment}
     *
     * @param ${tableSmallCamel}BatchDelReqDTO 待删除${tabPrikeyComment}数组
     * @return
     */
    @ApiOperation("依据Id批量删除 ${tableComment}")
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public ResponseResult<Integer> delete(@RequestBody ${tableBigCamel}BatchDelReqDTO ${tableSmallCamel}BatchDelReqDTO) {
        ResponseResult<Integer> response = ${tableSmallCamel}Service.delete${tableBigCamel}s(${tableSmallCamel}BatchDelReqDTO);
        return response;
    }
    </#if>

}

